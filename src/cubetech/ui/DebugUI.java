/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DebugUI.java
 *
 * Created on 24-01-2011, 15:50:59
 */

package cubetech.ui;

import cubetech.client.ClientActive;
import cubetech.client.ClientConnect;
import cubetech.common.CVar;
import cubetech.misc.FinishedUpdatingListener;
import cubetech.misc.Log;
import cubetech.misc.LogEventListener;
import cubetech.misc.Ref;
import cubetech.net.ConnectState;
import cubetech.net.DefaultNet;
import java.awt.Canvas;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;
import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.AWTGLCanvas;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.GLContext;

/**
 *
 * @author mads
 */
public class DebugUI extends javax.swing.JFrame implements LogEventListener {

    // Client tab - Keep track of changes
    private int lastServerCmdSeq = 0;
    private int lastReliableCmdSeq = 0;
    Canvas canvas;

    /** Creates new form DebugUI */
    public DebugUI() {
        initComponents();
        
        // Set CVar columns
        DefaultTableColumnModel clmModel = new DefaultTableColumnModel();
        TableColumn cvName = new TableColumn(0, 10);
        cvName.setPreferredWidth(150);
        cvName.setMinWidth(50);
        cvName.setHeaderValue("Name");
        TableColumn cvValue = new TableColumn(1, 70);
        cvValue.setPreferredWidth(400);
        cvValue.setHeaderValue("Value");
        clmModel.addColumn(cvName);
        clmModel.addColumn(cvValue);
        cvarTable.setColumnModel(clmModel);

        Log.AddLogListener(this);

        jTabbedPane1.addTab("Material Editor", new MaterialUI());
    }

    private AbstractTableModel getCVarTableModel() {
        return cvarmodel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cvarTable = new javax.swing.JTable();
        cvarRefreshButton = new javax.swing.JButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        activeMapname = new javax.swing.JLabel();
        activeServerid = new javax.swing.JLabel();
        activeOldservertime = new javax.swing.JLabel();
        activeServerTimeDelta = new javax.swing.JLabel();
        activeExtrapolatedSnaps = new javax.swing.JLabel();
        activeNewsnapshots = new javax.swing.JLabel();
        activeParseEntitiesNum = new javax.swing.JLabel();
        activeTimeoutcount = new javax.swing.JLabel();
        activeOldFrameServerTime = new javax.swing.JLabel();
        activeServertime = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        connectClientNum = new javax.swing.JLabel();
        connectlastPacketTime = new javax.swing.JLabel();
        connectLastPacketSentTime = new javax.swing.JLabel();
        connectChallenge = new javax.swing.JLabel();
        connectServerAddr = new javax.swing.JLabel();
        connectConnectTime = new javax.swing.JLabel();
        connectConnectPacketCount = new javax.swing.JLabel();
        connectReliableSeq = new javax.swing.JLabel();
        connectReliableAck = new javax.swing.JLabel();
        connectServerMsgSeq = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        connectvServerCmdSeq = new javax.swing.JLabel();
        connectLastExecSrvCmd = new javax.swing.JLabel();
        connectServermessage = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaReliableCmd = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaServerCmd = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        clientServername = new javax.swing.JLabel();
        clientFrametime = new javax.swing.JLabel();
        clientRealtime = new javax.swing.JLabel();
        clientState = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        clientPacketOut = new javax.swing.JLabel();
        clientByteIn = new javax.swing.JLabel();
        clientPacketIn = new javax.swing.JLabel();
        clientByteOut = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        consoleTextField = new javax.swing.JTextField();
        consoleEnterButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        consoleTextArea = new javax.swing.JTextArea();

        setTitle("CubeTech Dev Tool");

        cvarTable.setModel(getCVarTableModel());
        cvarTable.setColumnSelectionAllowed(true);
        cvarTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(cvarTable);
        cvarTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        cvarRefreshButton.setText("Refresh");
        cvarRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvarRefreshButtonActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Listen");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(705, Short.MAX_VALUE)
                .addComponent(jToggleButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cvarRefreshButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cvarRefreshButton)
                    .addComponent(jToggleButton2))
                .addContainerGap())
        );

        jTabbedPane1.addTab("CVars", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Active"));

        jLabel1.setText("mapname:");

        jLabel2.setText("serverid:");

        jLabel3.setText("oldservertime:");

        jLabel4.setText("serverTimeDelta:");

        jLabel5.setText("extrapolatedSnaps:");

        jLabel6.setText("newSnapshots:");

        jLabel7.setText("parseEntitiesNum:");

        jLabel8.setText("timeoutcount:");

        jLabel9.setText("oldFrameServerTime:");

        jLabel10.setText("serverTime");

        activeMapname.setText("N/A");

        activeServerid.setText("N/A");

        activeOldservertime.setText("N/A");

        activeServerTimeDelta.setText("N/A");

        activeExtrapolatedSnaps.setText("N/A");

        activeNewsnapshots.setText("N/A");

        activeParseEntitiesNum.setText("N/A");

        activeTimeoutcount.setText("N/A");

        activeOldFrameServerTime.setText("N/A");

        activeServertime.setText("N/A");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activeMapname, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeServerid, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeOldservertime, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeOldFrameServerTime, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeServerTimeDelta, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeServertime, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeExtrapolatedSnaps, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeNewsnapshots, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeParseEntitiesNum, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(activeTimeoutcount, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(activeServertime)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(activeMapname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeServerid)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(activeOldservertime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeOldFrameServerTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeServerTimeDelta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeExtrapolatedSnaps)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeNewsnapshots)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeParseEntitiesNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activeTimeoutcount)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Connect"));

        jLabel13.setText("clientNum:");

        jLabel14.setText("lastPacketTime");

        jLabel15.setText("lastPacketSentTime");

        jLabel16.setText("challenge");

        jLabel17.setText("serverAddr");

        jLabel18.setText("connectTime");

        jLabel19.setText("connectPacketCount");

        jLabel20.setText("reliableSequence");

        jLabel21.setText("reliableAcknowledge");

        jLabel22.setText("serverMsgSequence");

        connectClientNum.setText("N/A");

        connectlastPacketTime.setText("N/A");

        connectLastPacketSentTime.setText("N/A");

        connectChallenge.setText("N/A");

        connectServerAddr.setText("N/A");

        connectConnectTime.setText("N/A");

        connectConnectPacketCount.setText("N/A");

        connectReliableSeq.setText("N/A");

        connectReliableAck.setText("N/A");

        connectServerMsgSeq.setText("N/A");

        jLabel36.setText("serverCmdSequence");

        jLabel37.setText("lastExecSrvCommand");

        jLabel38.setText("servermessage");

        connectvServerCmdSeq.setText("N/A");

        connectLastExecSrvCmd.setText("N/A");

        connectServermessage.setText("N/A");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(connectClientNum, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectlastPacketTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectLastPacketSentTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectChallenge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectServerAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectConnectTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectConnectPacketCount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectReliableSeq, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectReliableAck, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectServerMsgSeq, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectvServerCmdSeq, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectLastExecSrvCmd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectServermessage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(connectClientNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(connectlastPacketTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(connectLastPacketSentTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(connectChallenge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(connectServerAddr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(connectConnectTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(connectConnectPacketCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(connectReliableSeq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(connectReliableAck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(connectServerMsgSeq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(connectvServerCmdSeq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(connectLastExecSrvCmd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(connectServermessage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToggleButton1.setText("Listen");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("ReliableCommand log"));

        jTextAreaReliableCmd.setColumns(20);
        jTextAreaReliableCmd.setEditable(false);
        jTextAreaReliableCmd.setLineWrap(true);
        jTextAreaReliableCmd.setRows(5);
        jTextAreaReliableCmd.setTabSize(4);
        jTextAreaReliableCmd.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextAreaReliableCmd);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("ServerCommand log"));

        jTextAreaServerCmd.setColumns(20);
        jTextAreaServerCmd.setEditable(false);
        jTextAreaServerCmd.setLineWrap(true);
        jTextAreaServerCmd.setRows(5);
        jTextAreaServerCmd.setTabSize(4);
        jTextAreaServerCmd.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextAreaServerCmd);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Client"));

        jLabel11.setText("servername:");

        jLabel12.setText("frametime:");

        jLabel23.setText("realtime:");

        jLabel24.setText("state:");

        clientServername.setText("N/A");

        clientFrametime.setText("N/A");

        clientRealtime.setText("N/A");

        clientState.setText("N/A");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clientServername, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientFrametime, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientRealtime, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientState, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(clientServername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(clientFrametime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(clientRealtime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(clientState))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Networking Stats"));

        jLabel25.setText("In packets/s:");

        jLabel26.setText("In kbytes/s:");

        jLabel27.setText("Out packets/s:");

        jLabel28.setText("Out kbytes/s:");

        clientPacketOut.setText("N/A");

        clientByteIn.setText("N/A");

        clientPacketIn.setText("N/A");

        clientByteOut.setText("N/A");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clientPacketIn, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(clientByteIn, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(clientPacketOut, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(clientByteOut, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientPacketIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(clientByteIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(clientPacketOut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(clientByteOut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton1))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton1)
                            .addComponent(jButton1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(171, 171, 171))
        );

        jTabbedPane1.addTab("Client", jPanel2);

        consoleTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                consoleTextFieldKeyPressed(evt);
            }
        });

        consoleEnterButton.setText("Enter");
        consoleEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consoleEnterButtonActionPerformed(evt);
            }
        });

        consoleTextArea.setColumns(20);
        consoleTextArea.setRows(5);
        jScrollPane4.setViewportView(consoleTextArea);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(consoleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consoleEnterButton)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consoleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consoleEnterButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Console", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cvarRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvarRefreshButtonActionPerformed
        cvarmodel.fireTableDataChanged();
        
    }//GEN-LAST:event_cvarRefreshButtonActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // Client listen
        if(Ref.client == null) return;

        // Enable/Disable client update hook
        if(jToggleButton1.isSelected()) {
            Ref.client.updateListener = new FinishedUpdatingListener() {
            public void FinishedUpdating() {
                UpdateClient();
            }};
            
        } else Ref.client.updateListener = null;
            

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // Cvar Listen
        if(Ref.cvars == null)
            return;

        // Enable/Disable cvar update hook
        if(jToggleButton2.isSelected())
            Ref.cvars.SetUpdateListener(new FinishedUpdatingListener() {
            public void FinishedUpdating() {
                cvarmodel.fireTableDataChanged();
            }});
        else
            Ref.cvars.RemoveUpdateListener();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Client refresh
        UpdateClient();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void consoleTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consoleTextFieldKeyPressed
        // Hook enter key from console text field
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            ConsoleCommand();
        }
    }//GEN-LAST:event_consoleTextFieldKeyPressed

    private void consoleEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consoleEnterButtonActionPerformed
        ConsoleCommand(); // Manually pressed enter on a console command
    }//GEN-LAST:event_consoleEnterButtonActionPerformed

    // Executes the commandtext
    private void ConsoleCommand() {
        if(Ref.Console == null)
        {
            consoleTextArea.append("Console subsystem not initialized.\n");
            return;
        }

        if(consoleTextField.getText().length() == 0)
            return;

        // Log and exec
        Ref.Console.ExecuteAndLog(consoleTextField.getText(), false);
        consoleTextField.setText("");
    }

    // Updates client network information
    private void UpdateClientNet() {
        if(Ref.net == null) {
            clientByteIn.setText("N/A");
            clientByteOut.setText("N/A");
            clientPacketIn.setText("N/A");
            clientPacketOut.setText("N/A");
            return;
        }

        DefaultNet net = Ref.net;
        clientByteIn.setText(""+net.stats.clAvgBytesIn / 1024f);
        clientByteOut.setText(""+net.stats.clAvgBytesOut / 1024f);
        clientPacketIn.setText(""+net.stats.clAvgPacketsIn);
        clientPacketOut.setText(""+net.stats.clAvgPacketsOut);
    }

    // Updates the whole client tab
    private void UpdateClient() {
        UpdateClientActive();
        UpdateClientConnect();
        UpdateClientNet();
        if(Ref.client == null) {
            clientFrametime.setText("N/A");
            clientRealtime.setText("N/A");
            clientServername.setText("N/A");
            clientState.setText("N/A");
            return;
        }

        clientFrametime.setText(""+Ref.client.frametime);
        clientRealtime.setText(""+Ref.client.realtime);
        clientServername.setText(""+Ref.client.clc.servername);
        clientState.setText(Ref.client.clc.state.toString());
    }

    
    private void UpdateClientConnect() {
        if(Ref.client == null || Ref.client.clc == null) {
            connectChallenge.setText("N/A");
            connectClientNum.setText("N/A");
            connectConnectPacketCount.setText("N/A");
            connectConnectTime.setText("N/A");
            connectLastExecSrvCmd.setText("N/A");
            connectLastPacketSentTime.setText("N/A");
            connectReliableAck.setText("N/A");
            connectReliableSeq.setText("N/A");
            connectServerAddr.setText("N/A");
            connectServerMsgSeq.setText("N/A");
            connectServermessage.setText("N/A");
            connectlastPacketTime.setText("N/A");
            connectvServerCmdSeq.setText("N/A");
            return;
        }

        ClientConnect clc = Ref.client.clc;
        connectChallenge.setText(""+clc.challenge);
        connectClientNum.setText(""+clc.ClientNum);
        connectConnectPacketCount.setText(""+clc.ConnectPacketCount);
        connectConnectTime.setText(""+clc.ConnectTime);
        connectLastExecSrvCmd.setText(""+clc.lastExecutedServerCommand);
        connectLastPacketSentTime.setText(""+clc.LastPacketSentTime);
        connectReliableAck.setText(""+clc.reliableAcknowlege);
        connectReliableSeq.setText(""+clc.reliableSequence);
        connectServerAddr.setText(""+clc.ServerAddr);
        connectServerMsgSeq.setText(""+clc.serverMessageSequence);
        connectServermessage.setText(""+clc.servermessage);
        connectlastPacketTime.setText(""+clc.LastPacketTime);
        connectvServerCmdSeq.setText(""+clc.serverCommandSequence);

        if(lastServerCmdSeq < clc.serverCommandSequence) {
            for(;lastServerCmdSeq < clc.serverCommandSequence;lastServerCmdSeq++) {
                // Add command to textarea and scroll it to the bottom
                jTextAreaServerCmd.append((lastServerCmdSeq+1)+": "+clc.serverCommands[(lastServerCmdSeq+1) & 63]);
                jTextAreaServerCmd.setCaretPosition(jTextAreaServerCmd.getDocument().getLength());
            }
        }
        if(lastReliableCmdSeq < clc.reliableSequence) {
            for(;lastReliableCmdSeq < clc.reliableSequence;lastReliableCmdSeq++) {
                // Add command to textarea and scroll it to the bottom
                jTextAreaReliableCmd.append((lastReliableCmdSeq+1)+": "+clc.reliableCommands[(lastReliableCmdSeq+1) & 63]+"\n");
                jTextAreaReliableCmd.setCaretPosition(jTextAreaReliableCmd.getDocument().getLength());
            }
        }
    }

    private void UpdateClientActive() {
        if(Ref.client == null || Ref.client.cl == null) {
            activeExtrapolatedSnaps.setText("N/A");
            activeMapname.setText("N/A");
            activeNewsnapshots.setText("N/A");
            activeOldservertime.setText("N/A");
            activeOldFrameServerTime.setText("N/A");
            activeParseEntitiesNum.setText("N/A");
            activeServerTimeDelta.setText("N/A");
            activeServerid.setText("N/A");
            activeTimeoutcount.setText("N/A");
            activeServertime.setText("N/A");
            return;
        }

        ClientActive cl = Ref.client.cl;
        activeExtrapolatedSnaps.setText(""+cl.extrapolatedSnapshot);
        activeMapname.setText(""+cl.mapname);
        activeNewsnapshots.setText(""+cl.newsnapshots);
        activeOldservertime.setText(""+cl.oldServerTime);
        activeOldFrameServerTime.setText(""+cl.oldFrameServerTime);
        activeParseEntitiesNum.setText(""+cl.parseEntitiesNum);
        activeServerTimeDelta.setText(""+cl.serverTimeDelta);
        activeServerid.setText(""+cl.serverid);
        activeTimeoutcount.setText(""+cl.timeoutCount);
        activeServertime.setText(""+cl.serverTime);
    }

    // For testing UI
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DebugUI().setVisible(true);
            }
        });
    }

    // Adds a line to the console log
    public void HandleLogLine(String str) {
        consoleTextArea.append(str+"\n");
        consoleTextArea.setCaretPosition(consoleTextArea.getDocument().getLength());
    }

    // Defines JTable model for the cvars
    AbstractTableModel cvarmodel = new AbstractTableModel() {
            public int getRowCount() {
                if(Ref.cvars == null)
                    return 1;
                else return Ref.cvars.GetCVarCount();
            }

            public int getColumnCount() {
                if(Ref.cvars == null)
                    return 1;
                return 2;
            }

            public Object getValueAt(int rowIndex, int columnIndex) {
                if(Ref.cvars == null)
                    return "CVar system not initialized";
                CVar var = Ref.cvars.GetCVarIndex(rowIndex);
                if(var == null)
                    return "N/A";
                if(columnIndex == 0)
                    return var.Name;
                else if(columnIndex == 1)
                    return var.sValue;
                return "N/A";
            }

        @Override
            public boolean isCellEditable(int row, int col) {
                if(col == 1)
                    return true;

                return false;
            }

        @Override
            public void setValueAt(Object val, int row, int col) {
                // Try to find the cvar
                if(Ref.cvars == null)
                    return;
                CVar var = Ref.cvars.GetCVarIndex(row);
                if(var == null)
                    return;
                if(col == 1) {
                    // Set String
                    Ref.cvars.Set2(var.Name, (String)val, true);
                    fireTableRowsUpdated(row, row);
                }
            }

        };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activeExtrapolatedSnaps;
    private javax.swing.JLabel activeMapname;
    private javax.swing.JLabel activeNewsnapshots;
    private javax.swing.JLabel activeOldFrameServerTime;
    private javax.swing.JLabel activeOldservertime;
    private javax.swing.JLabel activeParseEntitiesNum;
    private javax.swing.JLabel activeServerTimeDelta;
    private javax.swing.JLabel activeServerid;
    private javax.swing.JLabel activeServertime;
    private javax.swing.JLabel activeTimeoutcount;
    private javax.swing.JLabel clientByteIn;
    private javax.swing.JLabel clientByteOut;
    private javax.swing.JLabel clientFrametime;
    private javax.swing.JLabel clientPacketIn;
    private javax.swing.JLabel clientPacketOut;
    private javax.swing.JLabel clientRealtime;
    private javax.swing.JLabel clientServername;
    private javax.swing.JLabel clientState;
    private javax.swing.JLabel connectChallenge;
    private javax.swing.JLabel connectClientNum;
    private javax.swing.JLabel connectConnectPacketCount;
    private javax.swing.JLabel connectConnectTime;
    private javax.swing.JLabel connectLastExecSrvCmd;
    private javax.swing.JLabel connectLastPacketSentTime;
    private javax.swing.JLabel connectReliableAck;
    private javax.swing.JLabel connectReliableSeq;
    private javax.swing.JLabel connectServerAddr;
    private javax.swing.JLabel connectServerMsgSeq;
    private javax.swing.JLabel connectServermessage;
    private javax.swing.JLabel connectlastPacketTime;
    private javax.swing.JLabel connectvServerCmdSeq;
    private javax.swing.JButton consoleEnterButton;
    private javax.swing.JTextArea consoleTextArea;
    private javax.swing.JTextField consoleTextField;
    private javax.swing.JButton cvarRefreshButton;
    private javax.swing.JTable cvarTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaReliableCmd;
    private javax.swing.JTextArea jTextAreaServerCmd;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables

    
}
